version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        - STACK_NAME=${STACK_NAME}
        - ENABLE_FINANCIAL=${ENABLE_FINANCIAL:-false}
        - GERENCIANET_PIX_CERT=${GERENCIANET_PIX_CERT:-production-cert}
    ports:
      - "${BACKEND_PORT:-6000}:4000"
    environment:
      - BACKEND_URL=${BACKEND_URL} # Mantenha esta linha se BACKEND_URL for definida externamente ou em outro .env global
      # - FRONTEND_URL=${FRONTEND_URL} # <--- REMOVA ESTA LINHA!
      - ENABLE_FINANCIAL=${ENABLE_FINANCIAL:-false}
      - GERENCIANET_SANDBOX=${GERENCIANET_SANDBOX:-false}
      - GERENCIANET_PIX_CERT=${GERENCIANET_PIX_CERT:-production-cert}
      - GERENCIANET_CLIENT_ID=${GERENCIANET_CLIENT_ID}
      - GERENCIANET_CLIENT_SECRET=${GERENCIANET_CLIENT_SECRET}
      - GERENCIANET_PIX_KEY=${GERENCIANET_PIX_KEY}
    env_file:
      - backend/.env # Agora, este será a única fonte para FRONTEND_URL
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '${BACKEND_CPU_LIMIT:-0.5}' # Adicionado valor padrão
          memory: ${BACKEND_MEM_LIMIT:-512}M # Adicionado valor padrão
        reservations:
          cpus: '${BACKEND_CPU_RESERVE:-0.25}' # Adicionado valor padrão
          memory: ${BACKEND_MEM_RESERVE:-256}M # Adicionado valor padrão

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        - REACT_APP_BACKEND_URL=https://back.convergy.agency # <--- MUDANÇA NESTA LINHA!
        - REACT_APP_HOURS_CLOSE_TICKETS_AUTO=24
        - STACK_NAME=${STACK_NAME} # Mantenha esta linha se STACK_NAME for definida externamente
        - REACT_APP_COLOR=${COLOR} # Mantenha esta linha se COLOR for definida externamente
        - REACT_APP_TAB_NAME=${TAB_NAME} # Mantenha esta linha se TAB_NAME for definida externamente
    ports:
      - "${FRONTEND_PORT:-3001}:3001"
    depends_on:
      - backend
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '${FRONTEND_CPU_LIMIT:-0.5}' # Adicionado valor padrão
          memory: ${FRONTEND_MEM_LIMIT:-512}M # Adicionado valor padrão
        reservations:
          cpus: '${FRONTEND_CPU_RESERVE:-0.25}' # Adicionado valor padrão
          memory: ${FRONTEND_MEM_RESERVE:-256}M # Adicionado valor padrão

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=convergy
      - POSTGRES_PASSWORD=lfiduhedln5168luyv
      - POSTGRES_DB=codatende
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '${POSTGRES_CPU_LIMIT:-0.5}' # Adicionado valor padrão
          memory: ${POSTGRES_MEM_LIMIT:-512}M # Adicionado valor padrão
        reservations:
          cpus: '${POSTGRES_CPU_RESERVE:-0.25}' # Adicionado valor padrão
          memory: ${POSTGRES_MEM_RESERVE:-256}M # Adicionado valor padrão

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '${REDIS_CPU_LIMIT:-0.25}' # Adicionado valor padrão
          memory: ${REDIS_MEM_LIMIT:-256}M # Adicionado valor padrão
        reservations:
          cpus: '${REDIS_CPU_RESERVE:-0.1}' # Adicionado valor padrão
          memory: ${REDIS_MEM_RESERVE:-128}M # Adicionado valor padrão

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: # Adicione esta linha para o volume do redis, se não estiver lá